/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}*{padding:0;margin:0;border:0}*,*:before,*:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}:focus,:active{outline:none}a:focus,a:active{outline:none}aside,nav,footer,header,section{display:block}html,body{height:100%}body{line-height:1;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:visited{text-decoration:none}a:hover{text-decoration:none}ul li{list-style:none}img{vertical-align:top}body{font-family:"Open Sans",sans-serif}.clearfix{clear:both;display:table}.links{text-decoration:none;cursor:pointer}.head{display:flex;flex-direction:column;justify-content:space-between;min-height:100vh;background:url("../img/header_background.png") center no-repeat;background-size:cover}.container{max-width:1200px;width:100%;margin:0 auto}.design .container{max-width:1050px;width:100%}.carousel .container{max-width:800px;width:100%}.footer .container{max-width:1139px}header.navigate{padding:110px 18px 0 18px;display:flex;justify-content:space-between;align-items:center}.menu{display:flex;justify-content:space-between;align-items:center;width:86px;cursor:pointer}.menu a{color:#fff}.burger_menu{display:block;position:relative;width:26px;height:20px;cursor:pointer}.burger_menu:before,.burger_menu:after{content:"";background-color:#fff;position:absolute;width:100%;height:2px;left:0}.burger_menu:before{top:0}.burger_menu:after{bottom:0}.burger_menu span{position:absolute;background-color:#fff;width:100%;height:2px;left:0;top:9px}.header-section{text-align:center;margin:170px auto 0}h1{font-weight:800;font-size:70px;font-family:"Open Sans",sans-serif;color:#fff;text-transform:uppercase;margin-bottom:37px}h1 span{color:#f7600e}.header-section p{max-width:774px;width:100%;font-weight:400;font-size:25px;font-family:"Open Sans",sans-serif;line-height:40px;color:#fff;margin:auto}.design h3{font-weight:600;font-size:16px;font-family:"Open Sans",sans-serif;line-height:40px;text-transform:uppercase}.design-content{display:flex;flex-wrap:wrap;justify-content:space-evenly;padding:101px 0 112px}.design-item{display:flex;flex-direction:column;justify-content:start;align-items:center;max-width:180px;width:100%;text-align:center}.design-item p{font-weight:400;font-size:14px;font-family:"Open Sans",sans-serif;line-height:26px}.design-logo{display:flex;width:151px;height:151px;border:solid 1px rgba(59,67,76,0.3);border-radius:50%;background:center no-repeat}.logo-print{background-image:url("../img/print_design.png")}.logo-web{background-image:url("../img/web_design.png")}.logo-app{background-image:url("../img/app_design.png")}.logo-logo{background-image:url("../img/logo_design.png")}.subscribe{background:url("../img/background_subscribe.png") center no-repeat;background-size:cover}.input{height:50px;width:100%;padding:16px 15px 16px 15px;border-radius:10px;background-color:#ffffff}.subscribe-form{text-align:center;margin:100px 0}.subscribe-form .input{max-width:562px;margin:0 30px;font-weight:300;font-size:16px;font-family:"Open Sans",sans-serif}.title{text-align:center}.title h2{font-weight:600;font-size:35px;font-family:"Open Sans",sans-serif;line-height:40px;text-transform:uppercase;margin:0 0 29px}.title h2 span{color:#f7600e}.title p{font-weight:400;font-size:16px;font-family:"Open Sans",sans-serif;line-height:30px;max-width:455px;width:100%;margin:0 auto}.works{background:#fff;text-align:center}.works__items{display:flex;flex-wrap:wrap;justify-content:center}.works-text{margin:100px 0}.works-item{position:relative;border-radius:10px;margin:14px;max-width:360px;max-height:360px;width:100%;height:100%}.works-item:hover .hover-content{display:flex}.works-item .hover-content{display:none;border-radius:10px;flex-direction:column;align-items:center;justify-content:space-around;padding:15%;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(247,96,14,0.9);color:#fff}.works-item .hover-content h3{font-weight:600;font-size:25px;font-family:"Open Sans",sans-serif;line-height:40px;text-transform:uppercase}.works-item .hover-content p{font-weight:400;font-size:14px;font-family:"Open Sans",sans-serif;line-height:26px}.works-item .hover-content .button{background-color:#fff;color:#f7600e}.carousel{background:url("../img/background_client.png") center no-repeat;padding:100px 15px}.carousel-item{display:flex;flex-direction:column;align-items:center;justify-content:space-between;position:relative;color:#fff}.carousel-item:before{content:url("../img/arrow_left.png");position:absolute;top:50%;left:-180px}.carousel-item:after{content:url("../img/arrow_right.png");position:absolute;top:50%;right:-180px}.carousel-item:hover:before,.carousel-item:hover:after{cursor:pointer}.carousel-text{flex:1 1 100%;font-weight:400;font-size:25px;font-family:"Open Sans",sans-serif;line-height:160%;font-style:italic;text-align:center}.carousel-name{font-weight:400;font-size:18px;font-family:"Open Sans",sans-serif;line-height:222.22222%}.team-text{padding:100px 0 130px}.team-list{display:flex;flex-wrap:wrap;justify-content:space-around}.team-column{flex:0 0 25%}.team-item{display:flex;flex-direction:column;object-fit:cover;max-width:256px;text-align:center;align-items:center;filter:grayscale(1);opacity:70%}.team-item:hover{filter:grayscale(0);transition:0.3ms;opacity:100%}.team-item:hover .team-photo img{transform:scale(1.1);transform-origin:bottom;box-sizing:border-box;border-bottom:5px solid #f7600e}.team-item>*:not(:last-child){margin:0 0 28px}.team-item__name{font-weight:600;font-size:25px;font-family:"Open Sans",sans-serif;text-transform:uppercase}.team-item__text{font-weight:400;font-size:14px;font-family:"Open Sans",sans-serif;line-height:186%;margin:0}.team-photo{width:235px;height:284px;border-radius:5px}.team-photo img{height:100%}.team-item .card-icons a :not(:last-child){margin:0 14px 0 0}.team-item .card-icons img{width:24px;height:24px;cursor:pointer}.team__carousel-dots{display:flex;justify-content:center}.team__carousel-dots ul{margin:97px 0 100px;display:flex;align-items:center}.team__carousel-dots ul>*:not(:last-child){margin-right:19px}.team__carousel-dots .dots{border-radius:50%;width:13px;height:13px;background-color:#3b434c;opacity:70%}.team__carousel-dots .dots.active{width:15px;height:15px;background-color:#f7600e}.hello{background:url("../img/background_form.png") center no-repeat;background-size:cover}.hello__container{max-width:858px}.hello .hello__text{color:#fff;padding:102px 0 97px}.hello__form{display:flex;flex-wrap:wrap;justify-content:space-between}.hello__form input,.hello__form textarea{font-weight:400;font-size:16px;font-family:"Open Sans",sans-serif}.hello__email{flex:0 1 50%;padding:0 14px;font-weight:400;font-size:16px;font-family:"Open Sans",sans-serif}.hello__subject{flex:0 1 50%;padding:0 14px}.hello__message{display:flex;flex:0 1 100%;margin:30px 0;padding:0 14px}.hello__message textarea{height:199px;border-radius:10px;padding:16px;width:100%}.hello__icons{float:right;margin-top:5px}.hello__icons>*:not(:last-child){margin-right:20px}.hello__icons>*:last-child{margin-right:14px}.hello__icon{flex:0 0 20%;width:43px;height:43px}.footer{max-height:141px;height:100%;background-color:#3b434c}.footer img{position:relative;top:2px}.copyright{display:flex;justify-content:space-between;align-items:center;padding-top:46px;color:#fff}.header-buttons{margin-top:49px;display:flex;justify-content:center;align-items:center;flex-wrap:wrap}.header-buttons .button{margin:15px 27px}.button{display:inline-block;width:210px;padding:16px 0 16px;border-radius:10px;border:solid 1px rgba(255,255,255,0.2);font-weight:600;font-size:16px;font-family:"Open Sans",sans-serif;color:#fff;text-transform:uppercase;background-color:transparent}.button:hover{background-color:#f7600e}.subscribe-form .button{max-width:269px;width:100%;margin-top:15px;background-color:transparent}.subscribe-form .button:hover{background-color:#f7600e}.works .button.more{border:1px solid rgba(59,67,76,0.2);margin:100px auto;color:#3b434c}.works .button.more:hover{color:#fff}.arrow-down{display:block;margin:20px auto 51px;width:34px;height:34px;background-image:url("../img/circle_arrow_down.png")}.hello__button{display:inline-block;float:left;margin-bottom:140px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
